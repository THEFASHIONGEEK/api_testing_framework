# py.test test_user.tavern.yaml  -v --alluredir="C:\Users\ahema\users"
# allure serve C:\Users\ahema\users
# tavern-ci --stdout test_user.tavern.yaml
test_name: Operations about user API

strict:
  - json:off

# ...and each test has one or more stages (e.g. an HTTP request)
stages:
  - name: create multiple users with array

    # Define the request to be made...
    request:
        url : https://petstore.swagger.io/v2/user/createWithArray
        method : POST
        headers:
            content-type: application/json
        json:
          - id: 124
            username: kumaraku 
            firstName: hemanth
            lastName: string
            email: string
            password: string
            phone: string
            userStatus: 0

    # ...and the expected response code and body
    response:
      status_code: 200
      # save:
      #   json:
      #     name : "{tavern.request_vars.json.username}"
  
  - name: Update a user's username and other details

    # Define the request to be made...
    request:
        url : https://petstore.swagger.io/v2/user/kumaraku
        method : PUT
        headers:
            content-type: application/json
        json:
            id: 1
            username: kumar
            firstName: hemanth
            lastName: string
            email: string
            password: string
            phone: string
            userStatus: 0
        

    # ...and the expected response code and body
    response:
      status_code: 200
      # save:
      #   json:
      #     updatedusername : "{tavern.request_vars.json.username}"

  - name: Get user by the updated username

    # Define the request to be made...
    request:
        url : https://petstore.swagger.io/v2/user/kumar
        method : GET
        headers:
            content-type: application/json

    # ...and the expected response code and body
    response:
      status_code: 200
      json:
        username: "kumar"

